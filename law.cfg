[core]

# inherit from the columnflow configuration file
inherit: $CF_BASE/law.cfg


[modules]

columnflow.tasks.cms.external
columnflow.tasks.cms.inference
hbw.tasks.{inspection,campaigns,ml,inference,postfit_plots,plotting,wrapper,union,optimization,corrections,yields}



[logging]

# Options: INFO, WARNING, DEBUG
law: INFO
luigi-interface: INFO
gfal2: WARNING
columnflow.columnar_util-perf: INFO

[analysis]

# analysis defaults used from columnflow
default_analysis: hbw.analysis.hbw_merged.hbw_merged
default_config: c17
default_dataset: hh_ggf_hbb_hvvqqlnu_kl1_kt1_powheg

# defaults only used from custom helper scripts
default_version: prod3
default_common_version: common3


production_modules: hbw.production.{weights,ml_inputs,categories,gen_vbf_candidate,neutrino,synchronization,transformer}, hbw.ml.stats
calibration_modules: columnflow.calibration.jets, hbw.calibration.default
selection_modules: hbw.selection.{jet,common,sl_remastered,dl_remastered}
reduction_modules: hbw.reduction.default
categorization_modules: hbw.categorization.categories
weight_production_modules: hbw.weight.default
ml_modules: hbw.ml.base, hbw.ml.derived.{sl,dl,sl_res}
inference_modules: hbw.inference.{sl,dl,sl_res}

# namespace of all columnflow tasks
cf_task_namespace: cf

# default sandbox for main tasks with standard packages for columnar processing
default_columnar_sandbox: bash::$CF_BASE/sandboxes/venv_columnar.sh

# whether or not the ensure_proxy decorator should be skipped, even if used by task's run methods
skip_ensure_proxy: False

# some remote workflow parameter defaults
htcondor_flavor: $CF_HTCONDOR_FLAVOR
htcondor_share_software: False
slurm_flavor: $CF_SLURM_FLAVOR
slurm_partition: $CF_SLURM_PARTITION

# ChunkedIOHandler defaults
chunked_io_chunk_size: 100000
chunked_io_pool_size: 2
chunked_io_debug: False

# whether to log runtimes of array functions by default
log_array_function_runtime: False

# Tasks for which outputs will be checked for non-finite values before saving them to disk
check_finite_output: cf.CalibrateEvents, cf.SelectEvents, cf.ProduceColumns, cf.PrepareMLEvents, cf.MLEvaluation, cf.UniteColumns

# csv list of task families that inherit from ChunkedReaderMixin and whose input columns should be
# checked (raising an exception) for overlaps between fields when created a merged input array
check_overlapping_inputs: None

[outputs]

# list of all used file systems
wlcg_file_systems: wlcg_fs, wlcg_fs_desy, wlcg_fs_cernbox, wlcg_fs_desy_store, wlcg_fs_infn_redirector, wlcg_fs_global_redirector, wlcg_fs_run3_2022_preEE_nano_uhh_v12, wlcg_fs_run3_2022_postEE_nano_uhh_v12

# list of file systems used by columnflow.tasks.external.GetDatasetLFNs.iter_nano_files to
# look for the correct fs per nano input file (in that order)
lfn_sources: local_desy_dcache, wlcg_fs_desy_store, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# output locations per task family
# for local targets : "local[, STORE_PATH]"
# for remote targets: "wlcg[, WLCG_FS_NAME]"
# cf.BundleRepo: wlcg
# cf.BundleSoftware: wlcg
# cf.BundleBashSandbox: wlcg
# cf.BundleCMSSWSandbox: wlcg
# cf.BundleExternalFiles: wlcg
# NOTE: at some point, switch output location of more tasks to a common space (wlcg or local)
# cf.GetDatasetLFNs: wlcg
# cf.CalibrateEvents: wlcg
# cf.SelectEvents: wlcg
# cf.ReduceEvents: wlcg
# cf.MergeReducedEvents: wlcg
# cf.ProduceColumns: wlcg
# cf.PrepareMLEvents: wlcg
# cf.MergeMLEvents: wlcg
# cf.MLTraining: wlcg
# cf.MLEvaluation: wlcg


[versions]

# NOTE: in hbw, we also define default versions via the analysis section
# default versions of specific tasks to pin
# the key can consist of multple underscore-separated parts, that can each be patterns or regexes
# these parts are used for the lookup from within tasks and can contain (e.g.) the analysis name,
# the config name, the task family, the dataset name, or the shift name
# (see AnalysisTask.get_config_lookup_keys() - and subclasses - for the exact order)
# note:
# this lookup is skipped if the lookup based on the config instance's auxiliary data succeeded
# example:
; cfg_c22postv14__task_cf.CalibrateEvents__shift_nomin*: common3
; task_cf.SelectEvents: prod3

[resources]

# default sources of remote workflows
# keys can have the same format as described above in [versions] to pinpoint specific tasks
# values should be comma-separated strings in the form "RESOURCE=VALUE", where RESOURCE should refer
# to a valid task parameter (e.g. max_runtime, htcondor_memory, etc.) so that VALUE can be parsed
# by the respective parameter instance at runtime
# same as for [versions], the order of options is important as it defines the resolution order
# example:
; cfg_c22postv14__task_cf.CalibrateEvents__shift_nomin*: htcondor_memory=5GB
; task_cf.MLTraining: htcondor_memory=10GB, htcondor_gpus=1

# use cluster default for signals
# task_cf.SelectEvents__hh*: dummy=0
# task_cf.ReduceEvents__hh*: dummy=0
# DY and W needs more memory due to gen_v_boson Producer
task_cf.ReduceEvents__dy*: htcondor_memory=3.5GB
task_cf.ReduceEvents__w_lnu*: htcondor_memory=3.5GB
task_cf.ReduceEvents__tt*: htcondor_memory=2.5GB
# default resources for all other datasets
task_cf.CalibrateEvents: htcondor_memory=2GB
task_cf.SelectEvents: htcondor_memory=2GB
task_cf.ReduceEvents: htcondor_memory=2GB
task_cf.ProduceColumns__transformer: htcondor_memory=2.2GB
task_cf.MLTraining: htcondor_memory=8GB
task_hbw.PlotMLResultsSingleFold: htcondor_memory=8GB
task_cf.*: htcondor_memory=1.5GB


[luigi_cf.DummyTask]
# To set defaults on a per-task basis
# NOTE: this does override defaults defined in the config, but it does not overwrite parameters
#       when the parameter has already been set e.g. by another task requiring this task
dummy_param: dummy_value


[luigi_cf.MergeReductionStats]

# streamline task requirements by requiring all files to determine ReductionStats
n-inputs: -1

# TODO: it would be good if these parameters could be overwritten even when required from MLTraining
[luigi_cf.PrepareMLEvents]

htcondor-gpus: 0
htcondor-memory: -1
max-runtime: 4h


[luigi_cf.MergeMLEvents]

htcondor-gpus: 0
htcondor-memory: -1
max-runtime: 4h


# MLTraining defaults: would be nice to automatically submit to GPUs etc. but this might lead
# to running the MLTraining reqs also on GPU...
[luigi_cf.MLTraining]

# workflow: htcondor
# htcondor-gpus: 1
# htcondor-memory: 40000
# max-runtime: 24h


[job]

job_file_dir: $CF_JOB_BASE
job_file_dir_cleanup: False

# storage element (SE) and output directory on that SE for crab's internal output
# (crab might not even move files there, but it is strictly required for crab's job submission)
crab_storage_element: $CF_CRAB_STORAGE_ELEMENT
crab_base_directory: $CF_CRAB_BASE_DIRECTORY

# lcg setup file sourced in remote jobs to access gfal tools
remote_lcg_setup: /cvmfs/grid.cern.ch/centos7-ui-200122/etc/profile.d/setup-c7-ui-python3-example.sh


[local_fs]

base: /

[local_desy_dcache]

base: /pnfs/desy.de/cms/tier2

[wlcg_fs]

base: &::wlcg_fs_desy::base
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 50GB


[wlcg_fs_desy]

webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
base: &::webdav_base
base_filecopy: &::webdav_base
base_stat: &::webdav_base


[wlcg_fs_cernbox]

xrootd_base: root://eosuser.cern.ch/eos/user/$CF_CERN_USER_FIRSTCHAR/$CF_CERN_USER/$CF_STORE_NAME
base: &::xrootd_base


[wlcg_fs_desy_store]

xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_infn_redirector]

base: root://xrootd-cms.infn.it/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_global_redirector]

base: root://cms-xrd-global.cern.ch/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[local_desy_dcache_mfrahm]
base: /pnfs/desy.de/cms/tier2/store/user/mfrahm/hbw_store
[wlcg_fs_desy_mfrahm]

webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/mfrahm/hbw_store
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/mfrahm/hbw_store
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/mfrahm/hbw_store
base: &::webdav_base
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: false
cache_max_size: 50GB

[local_desy_dcache_lmarkus]
base: /pnfs/desy.de/cms/tier2/store/user/lmarkus/hbw_store
[wlcg_fs_desy_lmarkus]

webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/lmarkus/hbw_store
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/lmarkus/hbw_store
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/lmarkus/hbw_store
base: &::webdav_base
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 50GB


[wlcg_fs_run3_2022_preEE_nano_uhh_v12]

webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v12/prod3
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v12/prod3
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v12/prod3
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True

[local_fs_run3_2022_preEE_nano_uhh_v12]

base: file:///pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v12/prod3


[wlcg_fs_run3_2022_postEE_nano_uhh_v12]

webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v12/prod1
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v12/prod1
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v12/prod1
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True

[local_fs_run3_2022_postEE_nano_uhh_v12]

base: file:///pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v12/prod1



#
# file systems for custom NanoV14 LFNs
#


[local_fs_run3_2022_preEE_nano_uhh_v14]
base: file:///pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v14/prod1
[wlcg_fs_run3_2022_preEE_nano_uhh_v14]
webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v14/prod1
gsiftp_base: gsiftp://dcache-cms-gridftp.desy.de/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v14/prod1
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/nprouvos/nanogen_store/MergeNano/config_22pre_v14/prod1
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True


[local_fs_run3_2022_postEE_nano_uhh_v14]
base: file:///pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v14/prod1
[wlcg_fs_run3_2022_postEE_nano_uhh_v14]
webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v14/prod1
gsiftp_base: gsiftp://dcache-cms-gridftp.desy.de/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v14/prod1
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/aalvesan/nanogen_store/MergeNano/config_22post_v14/prod1
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True


[local_fs_run3_2023_preBPix_nano_uhh_v14]
base: file:///pnfs/desy.de/cms/tier2/store/user/bwieders/nanogen_store/MergeNano/config_23pre_v14/prod1
[wlcg_fs_run3_2023_preBPix_nano_uhh_v14]
webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/bwieders/nanogen_store/MergeNano/config_23pre_v14/prod1
gsiftp_base: gsiftp://dcache-cms-gridftp.desy.de/pnfs/desy.de/cms/tier2/store/user/bwieders/nanogen_store/MergeNano/config_23pre_v14/prod1
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/bwieders/nanogen_store/MergeNano/config_23pre_v14/prod1
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True


[local_fs_run3_2023_postBPix_nano_uhh_v14]
base: file:///pnfs/desy.de/cms/tier2/store/user/roward/nanogen_store/MergeNano/config_23post_v14/prod1
[wlcg_fs_run3_2023_postBPix_nano_uhh_v14]
webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/roward/nanogen_store/MergeNano/config_23post_v14/prod1
gsiftp_base: gsiftp://dcache-cms-gridftp.desy.de/pnfs/desy.de/cms/tier2/store/user/roward/nanogen_store/MergeNano/config_23post_v14/prod1
xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/roward/nanogen_store/MergeNano/config_23post_v14/prod1
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True


[luigi_resources]

naf_frahmmat: 5000
naf_paaschal: 5000
naf_markusla: 5000
naf_kosterin: 5000
naf_ebelingl: 5000
naf_letzerba: 5000
